// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  UserAuth   UserAuth @relation(fields: [userAuthId], references: [id])
  userAuthId String

  UserInformation   UserInformation @relation(fields: [userInformationId], references: [id])
  userInformationId String

  Device Device[]
}

model UserAuth {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String @unique
  password String

  User User[]
}

model UserInformation {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  imageUrl    String?
  displayName String?

  User User[]
}

model Device {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  deviceKey String @unique

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  DeviceData   DeviceData @relation(fields: [deviceDataId], references: [id])
  deviceDataId String
}

model DeviceData {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  isRinging       Boolean           @default(false)
  DeviceDataPress DeviceDataPress[]
  Device          Device[]
}

model DeviceDataPress {
  id        String   @id @default(uuid()) @map("_id")
  createdAt DateTime @default(now())

  DeviceData   DeviceData? @relation(fields: [deviceDataId], references: [id])
  deviceDataId String?
}
